<?php

namespace Binaryk\LaravelRestify\Fields;

use Binaryk\LaravelRestify\Contracts\RestifySearchable;
use Binaryk\LaravelRestify\Http\Requests\RestifyRequest;
use Binaryk\LaravelRestify\Repositories\Repository;
use Closure;
use Illuminate\Database\Eloquent\Model;

class BelongsToMany extends HasField
{
    public ?Closure $storeForParentCallback;

    public function __construct($attribute, $relation, $parentRepository)
    {
        if (!is_a(app($parentRepository), Repository::class)) {
            abort(500, "Invalid parent repository [{$parentRepository}]. Expended instance of " . Repository::class);
        }

        parent::__construct($attribute);

        $this->relation = $relation;
        $this->parentRepository = $parentRepository;
    }

    public function storeForParent(RestifyRequest $request, Model $parent): self
    {
        if (is_callable($this->storeForParentCallback)) {
            call_user_func_array($this->storeForParentCallback, [
                $request,
                $parent,
            ]);

            return $this;
        }

        $parent->{$this->attribute} = collect();

        collect(
            $request->input($this->attribute)
        )->each(function (array $data) use ($parent) {
            $parent->{$this->attribute}->push(
                $parent->{$this->relationship}()->create($data)
            );
        });

        return $this;
    }

    public function storeForParentCallback(callable $callback)
    {
        $this->storeForParentCallback = $callback;

        return $this;
    }

    public function resolve($repository, $attribute = null)
    {
        $paginator = $repository->{$this->relation}();

        $paginator = $paginator->take(request('relatablePerPage') ?? ($repository::$defaultRelatablePerPage ?? RestifySearchable::DEFAULT_RELATABLE_PER_PAGE))->get();

        $this->value = $paginator->map(function ($item) {
            return $this->parentRepository::resolveWith($item)->eagerState();
        });

        return $this;
    }

    public function jsonSerialize()
    {
        return parent::jsonSerialize(); // TODO: Change the autogenerated stub
    }

}
