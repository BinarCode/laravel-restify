<?php

namespace DummyNamespace;

use Binaryk\LaravelRestify\Http\Requests\RestifyRequest;
use Binaryk\LaravelRestify\Repositories\Repository as RestifyRepository;
use Illuminate\Contracts\Pagination\Paginator;

abstract class Repository extends RestifyRepository
{
    /**
     * Repository constructor.
     * @param  null  $model
     */
    public function __construct($model = null)
    {
        parent::__construct($model);
    }

    /**
     * Format the response for the details request (single item)
     *
     * @param $request
     * @param $serialized
     * @return array
     */
    public function serializeDetails($request, $serialized)
    {
        return $serialized;
    }

    /**
     * Format the response for the index request
     *
     * @param $request
     * @param $serialized
     * @return array
     */
    public function serializeIndex($request, $serialized)
    {
        return $serialized;
    }

    /**
     * Build an "index" query for the given repository.
     *
     * @param  RestifyRequest  $request
     * @param  \Illuminate\Database\Eloquent\Builder  $query
     * @return \Illuminate\Database\Eloquent\Builder
     */
    public static function indexQuery(RestifyRequest $request, $query)
    {
        return $query;
    }

    /**
     * Build an "detail" query for the given repository.
     *
     * @param  RestifyRequest  $request
     * @param  \Illuminate\Database\Eloquent\Builder  $query
     * @return \Illuminate\Database\Eloquent\Builder
     */
    public static function detailQuery(RestifyRequest $request, $query)
    {
        return $query;
    }

    public function index(RestifyRequest $request, Paginator $paginated)
    {
        return parent::index($request, $paginated);
    }

    public function show(RestifyRequest $request, $repositoryId)
    {
        return parent::show($request, $repositoryId);
    }


    public function store(RestifyRequest $request)
    {
        return parent::store($request);
    }

    public function update(RestifyRequest $request, $repositoryId)
    {
        $this->allowToUpdate($request);
        return parent::update($request, $repositoryId);
    }

    public function destroy(RestifyRequest $request, $repositoryId)
    {
        return parent::destroy($request, $repositoryId);
    }

}
